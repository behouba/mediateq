openapi: 3.0.0
servers:
  # Example domain to show how mediateq server base path may look like
  - description:  mediateq API example server
    url: https://yourdomain.com/mediateq/v0
info:
  description: mediateq is a file storage REST API server
  version: "0.0.1"
  title: mediateq API
  contact:
    email: behouba@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: images
    description: Images files related operations
  - name: documents
    description: Documents files related operations
  - name: audios
    description: Audios files related operations
  - name: videos
    description: Videos files related operations
paths:
  /info:
    get:
      description: Get info about the server
      responses:
        '200':
          description: Request succeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
  /images:
    post:
      tags:
        - images
      summary: upload image
      operationId: uploadImage
      description: Upload a single image file
      responses:
        '201':
          description: image uploaded
        '400':
          description: invalid input, file is not an image
        '500':
          description: an internal server error occured
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        description: Inventory item to add
        
  /images/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
    get:
      tags:
        - images
      summary: get image data
      operationId: getImage
      description: retreive images json object by images ids
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50

      responses:
        '200':
          description: Request succeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '403':
          description: not allowed to access this ressource
    delete:
      tags:
        - images
      description: Delete images by their ids
      operationId: deleteImage
      responses:
        '200':
          description: Image deleted
        '403':
          description: Not allowed to delete image
    put:
      tags:
        - images
      description: Update images by their ids
      parameters: 
        - in: query
          name: action
          description: The type of action to perform on the image
          required: true
          schema:
            type: string
            enum: 
              - rotate
              - grayscale
      responses:
        '200':
          description: Operation performed successfully
        '403':
          description: Operation not permitted
  /documents:
    post:
      tags:
        - documents
      summary: adds an inventory item
      operationId: uploadDocument
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
    get:
      tags:
        - documents
      summary: searches inventory
      operationId: getDocuments
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter

  /audios:
    post:
      tags:
        - audios
      summary: adds an inventory item
      operationId: uploadAudio
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
    get:
      tags:
        - audios
      summary: searches inventory
      operationId: getAudios
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter

  /videos:
    post:
      tags:
        - videos
      summary: adds an inventory item
      operationId: uploadVideo
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
    get:
      tags:
        - videos
      summary: searches inventory
      operationId: getVideos
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter

components:
  schemas:
    Info:
      type: object
      properties:
        host:
          type: string
          example: api.example.com
        upTime:
          type: integer
          example: 2345234
        version:
          type: string
          example: 1.0.0
    File:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f085
        type:
          type: string
          enum:
            - image
            - document
            - video
            - audio
        timestamp:
          type: integer
          example: 1651396874
        url:
          type: string
          example: https://api.example.com/audios/12022022/d701748f0851.png
    Image:
      type: object
      allOf:
        - $ref: '#/components/schemas/File'
      description: Image has the same properties as file with additional properties for user defined image sizes  
      properties:
        "240X400":
          type: string
          example: https://api.example.com/audios/12022022/d701748f0851.png
        "440X600":
          type: string
          example: https://api.example.com/audios/12022022/d701748f0851.png
    InventoryItem:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object